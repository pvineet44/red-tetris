{"version":3,"sources":["components/Buttons.tsx","components/Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Buttons","count","setCount","className","onClick","Counter","useState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAOaA,EAA2B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAQ9C,OACI,gCACI,wBAAQC,UAAY,mBAAmBC,QARxB,WACnBF,EAASD,EAAQ,IAOb,uBADJ,OAEI,wBAAQE,UAAY,mBAAmBC,QANxB,WACnBF,EAASD,EAAQ,IAKb,2BCfCI,EAAoB,WAAO,IAAD,EAETC,mBAAiB,GAFR,mBAE5BL,EAF4B,KAErBC,EAFqB,KAInC,OACI,gCACI,+CAAiB,4BAAID,OACrB,cAAC,EAAD,CAASA,MAAOA,EAAOC,SAAYA,QCGhCK,MARf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.33667cc4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n    count: number,\n    setCount: (count: number) => void,\n}\n\nexport const Buttons: React.FC<Props> = ({ count, setCount }) => {\n\n    const incrementCount = (): void => {\n        setCount(count + 1)\n    }\n    const decrementCount = (): void => {\n        setCount(count - 1)\n    }\n    return (\n        <div>\n            <button className = \"increment-button\" onClick={incrementCount}>Increment</button>&nbsp;\n            <button className = \"decrement-button\" onClick={decrementCount}>Decrement</button>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { Buttons } from './Buttons';\n\nexport const Counter: React.FC = () => {\n\n    const [count, setCount] = useState<number>(0)\n\n    return (\n        <div>\n            <h1>The count is <p>{count}</p></h1>\n            <Buttons count={count} setCount = {setCount}/>\n        </div>\n    )\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Counter } from './components/Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}